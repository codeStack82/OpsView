'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="wv90_Reporting")>  _
Partial Public Class LINQ_WellHeaderDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertwvt_wvWellHeader(instance As wvt_wvWellHeader)
    End Sub
  Partial Private Sub Updatewvt_wvWellHeader(instance As wvt_wvWellHeader)
    End Sub
  Partial Private Sub Deletewvt_wvWellHeader(instance As wvt_wvWellHeader)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.OpsView.My.MySettings.Default.wv90_ReportingConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property wvt_wvWellHeaders() As System.Data.Linq.Table(Of wvt_wvWellHeader)
		Get
			Return Me.GetTable(Of wvt_wvWellHeader)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.wvt_wvWellHeader")>  _
Partial Public Class wvt_wvWellHeader
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _idwell As String
	
	Private _agent As String
	
	Private _area As String
	
	Private _basin As String
	
	Private _basincode As String
	
	Private _com As String
	
	Private _country As String
	
	Private _county As String
	
	Private _currentwellstatus1 As String
	
	Private _currentwellstatus2 As String
	
	Private _directionstowell As String
	
	Private _district As String
	
	Private _division As String
	
	Private _dttmabandon As System.Nullable(Of Date)
	
	Private _dttmfirstprod As System.Nullable(Of Date)
	
	Private _dttmrr As System.Nullable(Of Date)
	
	Private _dttmspud As System.Nullable(Of Date)
	
	Private _dttmwellclass As System.Nullable(Of Date)
	
	Private _dttmwelllic As System.Nullable(Of Date)
	
	Private _elvcasflange As System.Nullable(Of Double)
	
	Private _elvground As System.Nullable(Of Double)
	
	Private _elvmudline As System.Nullable(Of Double)
	
	Private _elvorigkb As System.Nullable(Of Double)
	
	Private _elvtubhead As System.Nullable(Of Double)
	
	Private _environmentsensitive As System.Nullable(Of Short)
	
	Private _ewdist As System.Nullable(Of Double)
	
	Private _ewflag As String
	
	Private _fieldcode As String
	
	Private _fieldname As String
	
	Private _fieldoffice As String
	
	Private _govauthority As String
	
	Private _hih2s As System.Nullable(Of Short)
	
	Private _hisitp As System.Nullable(Of Short)
	
	Private _idrecelvhistory As String
	
	Private _idrecelvhistorytk As String
	
	Private _idrecproblem As String
	
	Private _idrecproblemtk As String
	
	Private _idrecsite As String
	
	Private _idrecsitetk As String
	
	Private _latitude As System.Nullable(Of Double)
	
	Private _latlongdatum As String
	
	Private _latlongsource As String
	
	Private _lease As String
	
	Private _leasecode As String
	
	Private _legalsurveyloc As String
	
	Private _legalsurveysubtyp As String
	
	Private _legalsurveytyp As String
	
	Private _locationnote As String
	
	Private _locationref As String
	
	Private _locationsensitive As System.Nullable(Of Short)
	
	Private _locationtyp As String
	
	Private _longitude As System.Nullable(Of Double)
	
	Private _nsdist As System.Nullable(Of Double)
	
	Private _nsflag As String
	
	Private _operated As System.Nullable(Of Short)
	
	Private _operator As String
	
	Private _operatorcode As String
	
	Private _platform As String
	
	Private _problemflag As System.Nullable(Of Short)
	
	Private _riskclass As String
	
	Private _slot As String
	
	Private _stateprov As String
	
	Private _surfacerights As String
	
	Private _towndist As System.Nullable(Of Double)
	
	Private _townflag As String
	
	Private _townname As String
	
	Private _townstateprov As String
	
	Private _userboolean1 As System.Nullable(Of Short)
	
	Private _userboolean2 As System.Nullable(Of Short)
	
	Private _userboolean3 As System.Nullable(Of Short)
	
	Private _userboolean4 As System.Nullable(Of Short)
	
	Private _userboolean5 As System.Nullable(Of Short)
	
	Private _userdttm1 As System.Nullable(Of Date)
	
	Private _userdttm2 As System.Nullable(Of Date)
	
	Private _userdttm3 As System.Nullable(Of Date)
	
	Private _userdttm4 As System.Nullable(Of Date)
	
	Private _userdttm5 As System.Nullable(Of Date)
	
	Private _usernum1 As System.Nullable(Of Double)
	
	Private _usernum2 As System.Nullable(Of Double)
	
	Private _usernum3 As System.Nullable(Of Double)
	
	Private _usernum4 As System.Nullable(Of Double)
	
	Private _usernum5 As System.Nullable(Of Double)
	
	Private _usertxt1 As String
	
	Private _usertxt10 As String
	
	Private _usertxt2 As String
	
	Private _usertxt3 As String
	
	Private _usertxt4 As String
	
	Private _usertxt5 As String
	
	Private _usertxt6 As String
	
	Private _usertxt7 As String
	
	Private _usertxt8 As String
	
	Private _usertxt9 As String
	
	Private _utmgridzone As System.Nullable(Of Integer)
	
	Private _utmsource As String
	
	Private _utmx As System.Nullable(Of Double)
	
	Private _utmy As System.Nullable(Of Double)
	
	Private _waterdepth As System.Nullable(Of Double)
	
	Private _wellclass As String
	
	Private _wellconfig As String
	
	Private _wellida As String
	
	Private _wellidb As String
	
	Private _wellidc As String
	
	Private _wellidd As String
	
	Private _wellide As String
	
	Private _welllicensee As String
	
	Private _welllicenseno As String
	
	Private _wellname As String
	
	Private _welltyp1 As String
	
	Private _welltyp2 As String
	
	Private _workingint As System.Nullable(Of Double)
	
	Private _syslockmeui As System.Nullable(Of Short)
	
	Private _syslockchildrenui As System.Nullable(Of Short)
	
	Private _syslockme As System.Nullable(Of Short)
	
	Private _syslockchildren As System.Nullable(Of Short)
	
	Private _syslockdate As System.Nullable(Of Date)
	
	Private _sysmoddate As System.Nullable(Of Date)
	
	Private _sysmoduser As String
	
	Private _syscreatedate As System.Nullable(Of Date)
	
	Private _syscreateuser As String
	
	Private _systag As String
	
	Private _sysmoddatedb As System.Nullable(Of Date)
	
	Private _sysmoduserdb As String
	
	Private _syssecuritytyp As String
	
	Private _syslockdatemaster As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidwellChanging(value As String)
    End Sub
    Partial Private Sub OnidwellChanged()
    End Sub
    Partial Private Sub OnagentChanging(value As String)
    End Sub
    Partial Private Sub OnagentChanged()
    End Sub
    Partial Private Sub OnareaChanging(value As String)
    End Sub
    Partial Private Sub OnareaChanged()
    End Sub
    Partial Private Sub OnbasinChanging(value As String)
    End Sub
    Partial Private Sub OnbasinChanged()
    End Sub
    Partial Private Sub OnbasincodeChanging(value As String)
    End Sub
    Partial Private Sub OnbasincodeChanged()
    End Sub
    Partial Private Sub OncomChanging(value As String)
    End Sub
    Partial Private Sub OncomChanged()
    End Sub
    Partial Private Sub OncountryChanging(value As String)
    End Sub
    Partial Private Sub OncountryChanged()
    End Sub
    Partial Private Sub OncountyChanging(value As String)
    End Sub
    Partial Private Sub OncountyChanged()
    End Sub
    Partial Private Sub Oncurrentwellstatus1Changing(value As String)
    End Sub
    Partial Private Sub Oncurrentwellstatus1Changed()
    End Sub
    Partial Private Sub Oncurrentwellstatus2Changing(value As String)
    End Sub
    Partial Private Sub Oncurrentwellstatus2Changed()
    End Sub
    Partial Private Sub OndirectionstowellChanging(value As String)
    End Sub
    Partial Private Sub OndirectionstowellChanged()
    End Sub
    Partial Private Sub OndistrictChanging(value As String)
    End Sub
    Partial Private Sub OndistrictChanged()
    End Sub
    Partial Private Sub OndivisionChanging(value As String)
    End Sub
    Partial Private Sub OndivisionChanged()
    End Sub
    Partial Private Sub OndttmabandonChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndttmabandonChanged()
    End Sub
    Partial Private Sub OndttmfirstprodChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndttmfirstprodChanged()
    End Sub
    Partial Private Sub OndttmrrChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndttmrrChanged()
    End Sub
    Partial Private Sub OndttmspudChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndttmspudChanged()
    End Sub
    Partial Private Sub OndttmwellclassChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndttmwellclassChanged()
    End Sub
    Partial Private Sub OndttmwelllicChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndttmwelllicChanged()
    End Sub
    Partial Private Sub OnelvcasflangeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnelvcasflangeChanged()
    End Sub
    Partial Private Sub OnelvgroundChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnelvgroundChanged()
    End Sub
    Partial Private Sub OnelvmudlineChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnelvmudlineChanged()
    End Sub
    Partial Private Sub OnelvorigkbChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnelvorigkbChanged()
    End Sub
    Partial Private Sub OnelvtubheadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnelvtubheadChanged()
    End Sub
    Partial Private Sub OnenvironmentsensitiveChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnenvironmentsensitiveChanged()
    End Sub
    Partial Private Sub OnewdistChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnewdistChanged()
    End Sub
    Partial Private Sub OnewflagChanging(value As String)
    End Sub
    Partial Private Sub OnewflagChanged()
    End Sub
    Partial Private Sub OnfieldcodeChanging(value As String)
    End Sub
    Partial Private Sub OnfieldcodeChanged()
    End Sub
    Partial Private Sub OnfieldnameChanging(value As String)
    End Sub
    Partial Private Sub OnfieldnameChanged()
    End Sub
    Partial Private Sub OnfieldofficeChanging(value As String)
    End Sub
    Partial Private Sub OnfieldofficeChanged()
    End Sub
    Partial Private Sub OngovauthorityChanging(value As String)
    End Sub
    Partial Private Sub OngovauthorityChanged()
    End Sub
    Partial Private Sub Onhih2sChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onhih2sChanged()
    End Sub
    Partial Private Sub OnhisitpChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnhisitpChanged()
    End Sub
    Partial Private Sub OnidrecelvhistoryChanging(value As String)
    End Sub
    Partial Private Sub OnidrecelvhistoryChanged()
    End Sub
    Partial Private Sub OnidrecelvhistorytkChanging(value As String)
    End Sub
    Partial Private Sub OnidrecelvhistorytkChanged()
    End Sub
    Partial Private Sub OnidrecproblemChanging(value As String)
    End Sub
    Partial Private Sub OnidrecproblemChanged()
    End Sub
    Partial Private Sub OnidrecproblemtkChanging(value As String)
    End Sub
    Partial Private Sub OnidrecproblemtkChanged()
    End Sub
    Partial Private Sub OnidrecsiteChanging(value As String)
    End Sub
    Partial Private Sub OnidrecsiteChanged()
    End Sub
    Partial Private Sub OnidrecsitetkChanging(value As String)
    End Sub
    Partial Private Sub OnidrecsitetkChanged()
    End Sub
    Partial Private Sub OnlatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnlatitudeChanged()
    End Sub
    Partial Private Sub OnlatlongdatumChanging(value As String)
    End Sub
    Partial Private Sub OnlatlongdatumChanged()
    End Sub
    Partial Private Sub OnlatlongsourceChanging(value As String)
    End Sub
    Partial Private Sub OnlatlongsourceChanged()
    End Sub
    Partial Private Sub OnleaseChanging(value As String)
    End Sub
    Partial Private Sub OnleaseChanged()
    End Sub
    Partial Private Sub OnleasecodeChanging(value As String)
    End Sub
    Partial Private Sub OnleasecodeChanged()
    End Sub
    Partial Private Sub OnlegalsurveylocChanging(value As String)
    End Sub
    Partial Private Sub OnlegalsurveylocChanged()
    End Sub
    Partial Private Sub OnlegalsurveysubtypChanging(value As String)
    End Sub
    Partial Private Sub OnlegalsurveysubtypChanged()
    End Sub
    Partial Private Sub OnlegalsurveytypChanging(value As String)
    End Sub
    Partial Private Sub OnlegalsurveytypChanged()
    End Sub
    Partial Private Sub OnlocationnoteChanging(value As String)
    End Sub
    Partial Private Sub OnlocationnoteChanged()
    End Sub
    Partial Private Sub OnlocationrefChanging(value As String)
    End Sub
    Partial Private Sub OnlocationrefChanged()
    End Sub
    Partial Private Sub OnlocationsensitiveChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlocationsensitiveChanged()
    End Sub
    Partial Private Sub OnlocationtypChanging(value As String)
    End Sub
    Partial Private Sub OnlocationtypChanged()
    End Sub
    Partial Private Sub OnlongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnlongitudeChanged()
    End Sub
    Partial Private Sub OnnsdistChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnnsdistChanged()
    End Sub
    Partial Private Sub OnnsflagChanging(value As String)
    End Sub
    Partial Private Sub OnnsflagChanged()
    End Sub
    Partial Private Sub OnoperatedChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnoperatedChanged()
    End Sub
    Partial Private Sub OnoperatorChanging(value As String)
    End Sub
    Partial Private Sub OnoperatorChanged()
    End Sub
    Partial Private Sub OnoperatorcodeChanging(value As String)
    End Sub
    Partial Private Sub OnoperatorcodeChanged()
    End Sub
    Partial Private Sub OnplatformChanging(value As String)
    End Sub
    Partial Private Sub OnplatformChanged()
    End Sub
    Partial Private Sub OnproblemflagChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnproblemflagChanged()
    End Sub
    Partial Private Sub OnriskclassChanging(value As String)
    End Sub
    Partial Private Sub OnriskclassChanged()
    End Sub
    Partial Private Sub OnslotChanging(value As String)
    End Sub
    Partial Private Sub OnslotChanged()
    End Sub
    Partial Private Sub OnstateprovChanging(value As String)
    End Sub
    Partial Private Sub OnstateprovChanged()
    End Sub
    Partial Private Sub OnsurfacerightsChanging(value As String)
    End Sub
    Partial Private Sub OnsurfacerightsChanged()
    End Sub
    Partial Private Sub OntowndistChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OntowndistChanged()
    End Sub
    Partial Private Sub OntownflagChanging(value As String)
    End Sub
    Partial Private Sub OntownflagChanged()
    End Sub
    Partial Private Sub OntownnameChanging(value As String)
    End Sub
    Partial Private Sub OntownnameChanged()
    End Sub
    Partial Private Sub OntownstateprovChanging(value As String)
    End Sub
    Partial Private Sub OntownstateprovChanged()
    End Sub
    Partial Private Sub Onuserboolean1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onuserboolean1Changed()
    End Sub
    Partial Private Sub Onuserboolean2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onuserboolean2Changed()
    End Sub
    Partial Private Sub Onuserboolean3Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onuserboolean3Changed()
    End Sub
    Partial Private Sub Onuserboolean4Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onuserboolean4Changed()
    End Sub
    Partial Private Sub Onuserboolean5Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onuserboolean5Changed()
    End Sub
    Partial Private Sub Onuserdttm1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onuserdttm1Changed()
    End Sub
    Partial Private Sub Onuserdttm2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onuserdttm2Changed()
    End Sub
    Partial Private Sub Onuserdttm3Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onuserdttm3Changed()
    End Sub
    Partial Private Sub Onuserdttm4Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onuserdttm4Changed()
    End Sub
    Partial Private Sub Onuserdttm5Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onuserdttm5Changed()
    End Sub
    Partial Private Sub Onusernum1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onusernum1Changed()
    End Sub
    Partial Private Sub Onusernum2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onusernum2Changed()
    End Sub
    Partial Private Sub Onusernum3Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onusernum3Changed()
    End Sub
    Partial Private Sub Onusernum4Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onusernum4Changed()
    End Sub
    Partial Private Sub Onusernum5Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onusernum5Changed()
    End Sub
    Partial Private Sub Onusertxt1Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt1Changed()
    End Sub
    Partial Private Sub Onusertxt10Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt10Changed()
    End Sub
    Partial Private Sub Onusertxt2Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt2Changed()
    End Sub
    Partial Private Sub Onusertxt3Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt3Changed()
    End Sub
    Partial Private Sub Onusertxt4Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt4Changed()
    End Sub
    Partial Private Sub Onusertxt5Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt5Changed()
    End Sub
    Partial Private Sub Onusertxt6Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt6Changed()
    End Sub
    Partial Private Sub Onusertxt7Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt7Changed()
    End Sub
    Partial Private Sub Onusertxt8Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt8Changed()
    End Sub
    Partial Private Sub Onusertxt9Changing(value As String)
    End Sub
    Partial Private Sub Onusertxt9Changed()
    End Sub
    Partial Private Sub OnutmgridzoneChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnutmgridzoneChanged()
    End Sub
    Partial Private Sub OnutmsourceChanging(value As String)
    End Sub
    Partial Private Sub OnutmsourceChanged()
    End Sub
    Partial Private Sub OnutmxChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnutmxChanged()
    End Sub
    Partial Private Sub OnutmyChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnutmyChanged()
    End Sub
    Partial Private Sub OnwaterdepthChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnwaterdepthChanged()
    End Sub
    Partial Private Sub OnwellclassChanging(value As String)
    End Sub
    Partial Private Sub OnwellclassChanged()
    End Sub
    Partial Private Sub OnwellconfigChanging(value As String)
    End Sub
    Partial Private Sub OnwellconfigChanged()
    End Sub
    Partial Private Sub OnwellidaChanging(value As String)
    End Sub
    Partial Private Sub OnwellidaChanged()
    End Sub
    Partial Private Sub OnwellidbChanging(value As String)
    End Sub
    Partial Private Sub OnwellidbChanged()
    End Sub
    Partial Private Sub OnwellidcChanging(value As String)
    End Sub
    Partial Private Sub OnwellidcChanged()
    End Sub
    Partial Private Sub OnwelliddChanging(value As String)
    End Sub
    Partial Private Sub OnwelliddChanged()
    End Sub
    Partial Private Sub OnwellideChanging(value As String)
    End Sub
    Partial Private Sub OnwellideChanged()
    End Sub
    Partial Private Sub OnwelllicenseeChanging(value As String)
    End Sub
    Partial Private Sub OnwelllicenseeChanged()
    End Sub
    Partial Private Sub OnwelllicensenoChanging(value As String)
    End Sub
    Partial Private Sub OnwelllicensenoChanged()
    End Sub
    Partial Private Sub OnwellnameChanging(value As String)
    End Sub
    Partial Private Sub OnwellnameChanged()
    End Sub
    Partial Private Sub Onwelltyp1Changing(value As String)
    End Sub
    Partial Private Sub Onwelltyp1Changed()
    End Sub
    Partial Private Sub Onwelltyp2Changing(value As String)
    End Sub
    Partial Private Sub Onwelltyp2Changed()
    End Sub
    Partial Private Sub OnworkingintChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnworkingintChanged()
    End Sub
    Partial Private Sub OnsyslockmeuiChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsyslockmeuiChanged()
    End Sub
    Partial Private Sub OnsyslockchildrenuiChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsyslockchildrenuiChanged()
    End Sub
    Partial Private Sub OnsyslockmeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsyslockmeChanged()
    End Sub
    Partial Private Sub OnsyslockchildrenChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsyslockchildrenChanged()
    End Sub
    Partial Private Sub OnsyslockdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnsyslockdateChanged()
    End Sub
    Partial Private Sub OnsysmoddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnsysmoddateChanged()
    End Sub
    Partial Private Sub OnsysmoduserChanging(value As String)
    End Sub
    Partial Private Sub OnsysmoduserChanged()
    End Sub
    Partial Private Sub OnsyscreatedateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnsyscreatedateChanged()
    End Sub
    Partial Private Sub OnsyscreateuserChanging(value As String)
    End Sub
    Partial Private Sub OnsyscreateuserChanged()
    End Sub
    Partial Private Sub OnsystagChanging(value As String)
    End Sub
    Partial Private Sub OnsystagChanged()
    End Sub
    Partial Private Sub OnsysmoddatedbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnsysmoddatedbChanged()
    End Sub
    Partial Private Sub OnsysmoduserdbChanging(value As String)
    End Sub
    Partial Private Sub OnsysmoduserdbChanged()
    End Sub
    Partial Private Sub OnsyssecuritytypChanging(value As String)
    End Sub
    Partial Private Sub OnsyssecuritytypChanged()
    End Sub
    Partial Private Sub OnsyslockdatemasterChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnsyslockdatemasterChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idwell", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property idwell() As String
		Get
			Return Me._idwell
		End Get
		Set
			If (String.Equals(Me._idwell, value) = false) Then
				Me.OnidwellChanging(value)
				Me.SendPropertyChanging
				Me._idwell = value
				Me.SendPropertyChanged("idwell")
				Me.OnidwellChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_agent", DbType:="VarChar(50)")>  _
	Public Property agent() As String
		Get
			Return Me._agent
		End Get
		Set
			If (String.Equals(Me._agent, value) = false) Then
				Me.OnagentChanging(value)
				Me.SendPropertyChanging
				Me._agent = value
				Me.SendPropertyChanged("agent")
				Me.OnagentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_area", DbType:="VarChar(50)")>  _
	Public Property area() As String
		Get
			Return Me._area
		End Get
		Set
			If (String.Equals(Me._area, value) = false) Then
				Me.OnareaChanging(value)
				Me.SendPropertyChanging
				Me._area = value
				Me.SendPropertyChanged("area")
				Me.OnareaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_basin", DbType:="VarChar(50)")>  _
	Public Property basin() As String
		Get
			Return Me._basin
		End Get
		Set
			If (String.Equals(Me._basin, value) = false) Then
				Me.OnbasinChanging(value)
				Me.SendPropertyChanging
				Me._basin = value
				Me.SendPropertyChanged("basin")
				Me.OnbasinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_basincode", DbType:="VarChar(10)")>  _
	Public Property basincode() As String
		Get
			Return Me._basincode
		End Get
		Set
			If (String.Equals(Me._basincode, value) = false) Then
				Me.OnbasincodeChanging(value)
				Me.SendPropertyChanging
				Me._basincode = value
				Me.SendPropertyChanged("basincode")
				Me.OnbasincodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_com", DbType:="VarChar(2000)")>  _
	Public Property com() As String
		Get
			Return Me._com
		End Get
		Set
			If (String.Equals(Me._com, value) = false) Then
				Me.OncomChanging(value)
				Me.SendPropertyChanging
				Me._com = value
				Me.SendPropertyChanged("com")
				Me.OncomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_country", DbType:="VarChar(50)")>  _
	Public Property country() As String
		Get
			Return Me._country
		End Get
		Set
			If (String.Equals(Me._country, value) = false) Then
				Me.OncountryChanging(value)
				Me.SendPropertyChanging
				Me._country = value
				Me.SendPropertyChanged("country")
				Me.OncountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_county", DbType:="VarChar(50)")>  _
	Public Property county() As String
		Get
			Return Me._county
		End Get
		Set
			If (String.Equals(Me._county, value) = false) Then
				Me.OncountyChanging(value)
				Me.SendPropertyChanging
				Me._county = value
				Me.SendPropertyChanged("county")
				Me.OncountyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_currentwellstatus1", DbType:="VarChar(50)")>  _
	Public Property currentwellstatus1() As String
		Get
			Return Me._currentwellstatus1
		End Get
		Set
			If (String.Equals(Me._currentwellstatus1, value) = false) Then
				Me.Oncurrentwellstatus1Changing(value)
				Me.SendPropertyChanging
				Me._currentwellstatus1 = value
				Me.SendPropertyChanged("currentwellstatus1")
				Me.Oncurrentwellstatus1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_currentwellstatus2", DbType:="VarChar(50)")>  _
	Public Property currentwellstatus2() As String
		Get
			Return Me._currentwellstatus2
		End Get
		Set
			If (String.Equals(Me._currentwellstatus2, value) = false) Then
				Me.Oncurrentwellstatus2Changing(value)
				Me.SendPropertyChanging
				Me._currentwellstatus2 = value
				Me.SendPropertyChanged("currentwellstatus2")
				Me.Oncurrentwellstatus2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_directionstowell", DbType:="VarChar(2000)")>  _
	Public Property directionstowell() As String
		Get
			Return Me._directionstowell
		End Get
		Set
			If (String.Equals(Me._directionstowell, value) = false) Then
				Me.OndirectionstowellChanging(value)
				Me.SendPropertyChanging
				Me._directionstowell = value
				Me.SendPropertyChanged("directionstowell")
				Me.OndirectionstowellChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_district", DbType:="VarChar(50)")>  _
	Public Property district() As String
		Get
			Return Me._district
		End Get
		Set
			If (String.Equals(Me._district, value) = false) Then
				Me.OndistrictChanging(value)
				Me.SendPropertyChanging
				Me._district = value
				Me.SendPropertyChanged("district")
				Me.OndistrictChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_division", DbType:="VarChar(50)")>  _
	Public Property division() As String
		Get
			Return Me._division
		End Get
		Set
			If (String.Equals(Me._division, value) = false) Then
				Me.OndivisionChanging(value)
				Me.SendPropertyChanging
				Me._division = value
				Me.SendPropertyChanged("division")
				Me.OndivisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dttmabandon", DbType:="DateTime")>  _
	Public Property dttmabandon() As System.Nullable(Of Date)
		Get
			Return Me._dttmabandon
		End Get
		Set
			If (Me._dttmabandon.Equals(value) = false) Then
				Me.OndttmabandonChanging(value)
				Me.SendPropertyChanging
				Me._dttmabandon = value
				Me.SendPropertyChanged("dttmabandon")
				Me.OndttmabandonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dttmfirstprod", DbType:="DateTime")>  _
	Public Property dttmfirstprod() As System.Nullable(Of Date)
		Get
			Return Me._dttmfirstprod
		End Get
		Set
			If (Me._dttmfirstprod.Equals(value) = false) Then
				Me.OndttmfirstprodChanging(value)
				Me.SendPropertyChanging
				Me._dttmfirstprod = value
				Me.SendPropertyChanged("dttmfirstprod")
				Me.OndttmfirstprodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dttmrr", DbType:="DateTime")>  _
	Public Property dttmrr() As System.Nullable(Of Date)
		Get
			Return Me._dttmrr
		End Get
		Set
			If (Me._dttmrr.Equals(value) = false) Then
				Me.OndttmrrChanging(value)
				Me.SendPropertyChanging
				Me._dttmrr = value
				Me.SendPropertyChanged("dttmrr")
				Me.OndttmrrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dttmspud", DbType:="DateTime")>  _
	Public Property dttmspud() As System.Nullable(Of Date)
		Get
			Return Me._dttmspud
		End Get
		Set
			If (Me._dttmspud.Equals(value) = false) Then
				Me.OndttmspudChanging(value)
				Me.SendPropertyChanging
				Me._dttmspud = value
				Me.SendPropertyChanged("dttmspud")
				Me.OndttmspudChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dttmwellclass", DbType:="DateTime")>  _
	Public Property dttmwellclass() As System.Nullable(Of Date)
		Get
			Return Me._dttmwellclass
		End Get
		Set
			If (Me._dttmwellclass.Equals(value) = false) Then
				Me.OndttmwellclassChanging(value)
				Me.SendPropertyChanging
				Me._dttmwellclass = value
				Me.SendPropertyChanged("dttmwellclass")
				Me.OndttmwellclassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dttmwelllic", DbType:="DateTime")>  _
	Public Property dttmwelllic() As System.Nullable(Of Date)
		Get
			Return Me._dttmwelllic
		End Get
		Set
			If (Me._dttmwelllic.Equals(value) = false) Then
				Me.OndttmwelllicChanging(value)
				Me.SendPropertyChanging
				Me._dttmwelllic = value
				Me.SendPropertyChanged("dttmwelllic")
				Me.OndttmwelllicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_elvcasflange", DbType:="Float")>  _
	Public Property elvcasflange() As System.Nullable(Of Double)
		Get
			Return Me._elvcasflange
		End Get
		Set
			If (Me._elvcasflange.Equals(value) = false) Then
				Me.OnelvcasflangeChanging(value)
				Me.SendPropertyChanging
				Me._elvcasflange = value
				Me.SendPropertyChanged("elvcasflange")
				Me.OnelvcasflangeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_elvground", DbType:="Float")>  _
	Public Property elvground() As System.Nullable(Of Double)
		Get
			Return Me._elvground
		End Get
		Set
			If (Me._elvground.Equals(value) = false) Then
				Me.OnelvgroundChanging(value)
				Me.SendPropertyChanging
				Me._elvground = value
				Me.SendPropertyChanged("elvground")
				Me.OnelvgroundChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_elvmudline", DbType:="Float")>  _
	Public Property elvmudline() As System.Nullable(Of Double)
		Get
			Return Me._elvmudline
		End Get
		Set
			If (Me._elvmudline.Equals(value) = false) Then
				Me.OnelvmudlineChanging(value)
				Me.SendPropertyChanging
				Me._elvmudline = value
				Me.SendPropertyChanged("elvmudline")
				Me.OnelvmudlineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_elvorigkb", DbType:="Float")>  _
	Public Property elvorigkb() As System.Nullable(Of Double)
		Get
			Return Me._elvorigkb
		End Get
		Set
			If (Me._elvorigkb.Equals(value) = false) Then
				Me.OnelvorigkbChanging(value)
				Me.SendPropertyChanging
				Me._elvorigkb = value
				Me.SendPropertyChanged("elvorigkb")
				Me.OnelvorigkbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_elvtubhead", DbType:="Float")>  _
	Public Property elvtubhead() As System.Nullable(Of Double)
		Get
			Return Me._elvtubhead
		End Get
		Set
			If (Me._elvtubhead.Equals(value) = false) Then
				Me.OnelvtubheadChanging(value)
				Me.SendPropertyChanging
				Me._elvtubhead = value
				Me.SendPropertyChanged("elvtubhead")
				Me.OnelvtubheadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_environmentsensitive", DbType:="SmallInt")>  _
	Public Property environmentsensitive() As System.Nullable(Of Short)
		Get
			Return Me._environmentsensitive
		End Get
		Set
			If (Me._environmentsensitive.Equals(value) = false) Then
				Me.OnenvironmentsensitiveChanging(value)
				Me.SendPropertyChanging
				Me._environmentsensitive = value
				Me.SendPropertyChanged("environmentsensitive")
				Me.OnenvironmentsensitiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ewdist", DbType:="Float")>  _
	Public Property ewdist() As System.Nullable(Of Double)
		Get
			Return Me._ewdist
		End Get
		Set
			If (Me._ewdist.Equals(value) = false) Then
				Me.OnewdistChanging(value)
				Me.SendPropertyChanging
				Me._ewdist = value
				Me.SendPropertyChanged("ewdist")
				Me.OnewdistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ewflag", DbType:="VarChar(5)")>  _
	Public Property ewflag() As String
		Get
			Return Me._ewflag
		End Get
		Set
			If (String.Equals(Me._ewflag, value) = false) Then
				Me.OnewflagChanging(value)
				Me.SendPropertyChanging
				Me._ewflag = value
				Me.SendPropertyChanged("ewflag")
				Me.OnewflagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fieldcode", DbType:="VarChar(10)")>  _
	Public Property fieldcode() As String
		Get
			Return Me._fieldcode
		End Get
		Set
			If (String.Equals(Me._fieldcode, value) = false) Then
				Me.OnfieldcodeChanging(value)
				Me.SendPropertyChanging
				Me._fieldcode = value
				Me.SendPropertyChanged("fieldcode")
				Me.OnfieldcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fieldname", DbType:="VarChar(50)")>  _
	Public Property fieldname() As String
		Get
			Return Me._fieldname
		End Get
		Set
			If (String.Equals(Me._fieldname, value) = false) Then
				Me.OnfieldnameChanging(value)
				Me.SendPropertyChanging
				Me._fieldname = value
				Me.SendPropertyChanged("fieldname")
				Me.OnfieldnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fieldoffice", DbType:="VarChar(50)")>  _
	Public Property fieldoffice() As String
		Get
			Return Me._fieldoffice
		End Get
		Set
			If (String.Equals(Me._fieldoffice, value) = false) Then
				Me.OnfieldofficeChanging(value)
				Me.SendPropertyChanging
				Me._fieldoffice = value
				Me.SendPropertyChanged("fieldoffice")
				Me.OnfieldofficeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_govauthority", DbType:="VarChar(50)")>  _
	Public Property govauthority() As String
		Get
			Return Me._govauthority
		End Get
		Set
			If (String.Equals(Me._govauthority, value) = false) Then
				Me.OngovauthorityChanging(value)
				Me.SendPropertyChanging
				Me._govauthority = value
				Me.SendPropertyChanged("govauthority")
				Me.OngovauthorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hih2s", DbType:="SmallInt")>  _
	Public Property hih2s() As System.Nullable(Of Short)
		Get
			Return Me._hih2s
		End Get
		Set
			If (Me._hih2s.Equals(value) = false) Then
				Me.Onhih2sChanging(value)
				Me.SendPropertyChanging
				Me._hih2s = value
				Me.SendPropertyChanged("hih2s")
				Me.Onhih2sChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hisitp", DbType:="SmallInt")>  _
	Public Property hisitp() As System.Nullable(Of Short)
		Get
			Return Me._hisitp
		End Get
		Set
			If (Me._hisitp.Equals(value) = false) Then
				Me.OnhisitpChanging(value)
				Me.SendPropertyChanging
				Me._hisitp = value
				Me.SendPropertyChanged("hisitp")
				Me.OnhisitpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idrecelvhistory", DbType:="VarChar(32)")>  _
	Public Property idrecelvhistory() As String
		Get
			Return Me._idrecelvhistory
		End Get
		Set
			If (String.Equals(Me._idrecelvhistory, value) = false) Then
				Me.OnidrecelvhistoryChanging(value)
				Me.SendPropertyChanging
				Me._idrecelvhistory = value
				Me.SendPropertyChanged("idrecelvhistory")
				Me.OnidrecelvhistoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idrecelvhistorytk", DbType:="VarChar(26)")>  _
	Public Property idrecelvhistorytk() As String
		Get
			Return Me._idrecelvhistorytk
		End Get
		Set
			If (String.Equals(Me._idrecelvhistorytk, value) = false) Then
				Me.OnidrecelvhistorytkChanging(value)
				Me.SendPropertyChanging
				Me._idrecelvhistorytk = value
				Me.SendPropertyChanged("idrecelvhistorytk")
				Me.OnidrecelvhistorytkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idrecproblem", DbType:="VarChar(32)")>  _
	Public Property idrecproblem() As String
		Get
			Return Me._idrecproblem
		End Get
		Set
			If (String.Equals(Me._idrecproblem, value) = false) Then
				Me.OnidrecproblemChanging(value)
				Me.SendPropertyChanging
				Me._idrecproblem = value
				Me.SendPropertyChanged("idrecproblem")
				Me.OnidrecproblemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idrecproblemtk", DbType:="VarChar(26)")>  _
	Public Property idrecproblemtk() As String
		Get
			Return Me._idrecproblemtk
		End Get
		Set
			If (String.Equals(Me._idrecproblemtk, value) = false) Then
				Me.OnidrecproblemtkChanging(value)
				Me.SendPropertyChanging
				Me._idrecproblemtk = value
				Me.SendPropertyChanged("idrecproblemtk")
				Me.OnidrecproblemtkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idrecsite", DbType:="VarChar(32)")>  _
	Public Property idrecsite() As String
		Get
			Return Me._idrecsite
		End Get
		Set
			If (String.Equals(Me._idrecsite, value) = false) Then
				Me.OnidrecsiteChanging(value)
				Me.SendPropertyChanging
				Me._idrecsite = value
				Me.SendPropertyChanged("idrecsite")
				Me.OnidrecsiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idrecsitetk", DbType:="VarChar(26)")>  _
	Public Property idrecsitetk() As String
		Get
			Return Me._idrecsitetk
		End Get
		Set
			If (String.Equals(Me._idrecsitetk, value) = false) Then
				Me.OnidrecsitetkChanging(value)
				Me.SendPropertyChanging
				Me._idrecsitetk = value
				Me.SendPropertyChanged("idrecsitetk")
				Me.OnidrecsitetkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_latitude", DbType:="Float")>  _
	Public Property latitude() As System.Nullable(Of Double)
		Get
			Return Me._latitude
		End Get
		Set
			If (Me._latitude.Equals(value) = false) Then
				Me.OnlatitudeChanging(value)
				Me.SendPropertyChanging
				Me._latitude = value
				Me.SendPropertyChanged("latitude")
				Me.OnlatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_latlongdatum", DbType:="VarChar(50)")>  _
	Public Property latlongdatum() As String
		Get
			Return Me._latlongdatum
		End Get
		Set
			If (String.Equals(Me._latlongdatum, value) = false) Then
				Me.OnlatlongdatumChanging(value)
				Me.SendPropertyChanging
				Me._latlongdatum = value
				Me.SendPropertyChanged("latlongdatum")
				Me.OnlatlongdatumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_latlongsource", DbType:="VarChar(50)")>  _
	Public Property latlongsource() As String
		Get
			Return Me._latlongsource
		End Get
		Set
			If (String.Equals(Me._latlongsource, value) = false) Then
				Me.OnlatlongsourceChanging(value)
				Me.SendPropertyChanging
				Me._latlongsource = value
				Me.SendPropertyChanged("latlongsource")
				Me.OnlatlongsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lease", DbType:="VarChar(50)")>  _
	Public Property lease() As String
		Get
			Return Me._lease
		End Get
		Set
			If (String.Equals(Me._lease, value) = false) Then
				Me.OnleaseChanging(value)
				Me.SendPropertyChanging
				Me._lease = value
				Me.SendPropertyChanged("lease")
				Me.OnleaseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_leasecode", DbType:="VarChar(50)")>  _
	Public Property leasecode() As String
		Get
			Return Me._leasecode
		End Get
		Set
			If (String.Equals(Me._leasecode, value) = false) Then
				Me.OnleasecodeChanging(value)
				Me.SendPropertyChanging
				Me._leasecode = value
				Me.SendPropertyChanged("leasecode")
				Me.OnleasecodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_legalsurveyloc", DbType:="VarChar(100)")>  _
	Public Property legalsurveyloc() As String
		Get
			Return Me._legalsurveyloc
		End Get
		Set
			If (String.Equals(Me._legalsurveyloc, value) = false) Then
				Me.OnlegalsurveylocChanging(value)
				Me.SendPropertyChanging
				Me._legalsurveyloc = value
				Me.SendPropertyChanged("legalsurveyloc")
				Me.OnlegalsurveylocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_legalsurveysubtyp", DbType:="VarChar(50)")>  _
	Public Property legalsurveysubtyp() As String
		Get
			Return Me._legalsurveysubtyp
		End Get
		Set
			If (String.Equals(Me._legalsurveysubtyp, value) = false) Then
				Me.OnlegalsurveysubtypChanging(value)
				Me.SendPropertyChanging
				Me._legalsurveysubtyp = value
				Me.SendPropertyChanged("legalsurveysubtyp")
				Me.OnlegalsurveysubtypChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_legalsurveytyp", DbType:="VarChar(50)")>  _
	Public Property legalsurveytyp() As String
		Get
			Return Me._legalsurveytyp
		End Get
		Set
			If (String.Equals(Me._legalsurveytyp, value) = false) Then
				Me.OnlegalsurveytypChanging(value)
				Me.SendPropertyChanging
				Me._legalsurveytyp = value
				Me.SendPropertyChanged("legalsurveytyp")
				Me.OnlegalsurveytypChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_locationnote", DbType:="VarChar(100)")>  _
	Public Property locationnote() As String
		Get
			Return Me._locationnote
		End Get
		Set
			If (String.Equals(Me._locationnote, value) = false) Then
				Me.OnlocationnoteChanging(value)
				Me.SendPropertyChanging
				Me._locationnote = value
				Me.SendPropertyChanged("locationnote")
				Me.OnlocationnoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_locationref", DbType:="VarChar(50)")>  _
	Public Property locationref() As String
		Get
			Return Me._locationref
		End Get
		Set
			If (String.Equals(Me._locationref, value) = false) Then
				Me.OnlocationrefChanging(value)
				Me.SendPropertyChanging
				Me._locationref = value
				Me.SendPropertyChanged("locationref")
				Me.OnlocationrefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_locationsensitive", DbType:="SmallInt")>  _
	Public Property locationsensitive() As System.Nullable(Of Short)
		Get
			Return Me._locationsensitive
		End Get
		Set
			If (Me._locationsensitive.Equals(value) = false) Then
				Me.OnlocationsensitiveChanging(value)
				Me.SendPropertyChanging
				Me._locationsensitive = value
				Me.SendPropertyChanged("locationsensitive")
				Me.OnlocationsensitiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_locationtyp", DbType:="VarChar(50)")>  _
	Public Property locationtyp() As String
		Get
			Return Me._locationtyp
		End Get
		Set
			If (String.Equals(Me._locationtyp, value) = false) Then
				Me.OnlocationtypChanging(value)
				Me.SendPropertyChanging
				Me._locationtyp = value
				Me.SendPropertyChanged("locationtyp")
				Me.OnlocationtypChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_longitude", DbType:="Float")>  _
	Public Property longitude() As System.Nullable(Of Double)
		Get
			Return Me._longitude
		End Get
		Set
			If (Me._longitude.Equals(value) = false) Then
				Me.OnlongitudeChanging(value)
				Me.SendPropertyChanging
				Me._longitude = value
				Me.SendPropertyChanged("longitude")
				Me.OnlongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nsdist", DbType:="Float")>  _
	Public Property nsdist() As System.Nullable(Of Double)
		Get
			Return Me._nsdist
		End Get
		Set
			If (Me._nsdist.Equals(value) = false) Then
				Me.OnnsdistChanging(value)
				Me.SendPropertyChanging
				Me._nsdist = value
				Me.SendPropertyChanged("nsdist")
				Me.OnnsdistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nsflag", DbType:="VarChar(5)")>  _
	Public Property nsflag() As String
		Get
			Return Me._nsflag
		End Get
		Set
			If (String.Equals(Me._nsflag, value) = false) Then
				Me.OnnsflagChanging(value)
				Me.SendPropertyChanging
				Me._nsflag = value
				Me.SendPropertyChanged("nsflag")
				Me.OnnsflagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_operated", DbType:="SmallInt")>  _
	Public Property operated() As System.Nullable(Of Short)
		Get
			Return Me._operated
		End Get
		Set
			If (Me._operated.Equals(value) = false) Then
				Me.OnoperatedChanging(value)
				Me.SendPropertyChanging
				Me._operated = value
				Me.SendPropertyChanged("operated")
				Me.OnoperatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="operator", Storage:="_operator", DbType:="VarChar(50)")>  _
	Public Property [operator]() As String
		Get
			Return Me._operator
		End Get
		Set
			If (String.Equals(Me._operator, value) = false) Then
				Me.OnoperatorChanging(value)
				Me.SendPropertyChanging
				Me._operator = value
				Me.SendPropertyChanged("[operator]")
				Me.OnoperatorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_operatorcode", DbType:="VarChar(50)")>  _
	Public Property operatorcode() As String
		Get
			Return Me._operatorcode
		End Get
		Set
			If (String.Equals(Me._operatorcode, value) = false) Then
				Me.OnoperatorcodeChanging(value)
				Me.SendPropertyChanging
				Me._operatorcode = value
				Me.SendPropertyChanged("operatorcode")
				Me.OnoperatorcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_platform", DbType:="VarChar(50)")>  _
	Public Property platform() As String
		Get
			Return Me._platform
		End Get
		Set
			If (String.Equals(Me._platform, value) = false) Then
				Me.OnplatformChanging(value)
				Me.SendPropertyChanging
				Me._platform = value
				Me.SendPropertyChanged("platform")
				Me.OnplatformChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_problemflag", DbType:="SmallInt")>  _
	Public Property problemflag() As System.Nullable(Of Short)
		Get
			Return Me._problemflag
		End Get
		Set
			If (Me._problemflag.Equals(value) = false) Then
				Me.OnproblemflagChanging(value)
				Me.SendPropertyChanging
				Me._problemflag = value
				Me.SendPropertyChanged("problemflag")
				Me.OnproblemflagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_riskclass", DbType:="VarChar(50)")>  _
	Public Property riskclass() As String
		Get
			Return Me._riskclass
		End Get
		Set
			If (String.Equals(Me._riskclass, value) = false) Then
				Me.OnriskclassChanging(value)
				Me.SendPropertyChanging
				Me._riskclass = value
				Me.SendPropertyChanged("riskclass")
				Me.OnriskclassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_slot", DbType:="VarChar(20)")>  _
	Public Property slot() As String
		Get
			Return Me._slot
		End Get
		Set
			If (String.Equals(Me._slot, value) = false) Then
				Me.OnslotChanging(value)
				Me.SendPropertyChanging
				Me._slot = value
				Me.SendPropertyChanged("slot")
				Me.OnslotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stateprov", DbType:="VarChar(50)")>  _
	Public Property stateprov() As String
		Get
			Return Me._stateprov
		End Get
		Set
			If (String.Equals(Me._stateprov, value) = false) Then
				Me.OnstateprovChanging(value)
				Me.SendPropertyChanging
				Me._stateprov = value
				Me.SendPropertyChanged("stateprov")
				Me.OnstateprovChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_surfacerights", DbType:="VarChar(50)")>  _
	Public Property surfacerights() As String
		Get
			Return Me._surfacerights
		End Get
		Set
			If (String.Equals(Me._surfacerights, value) = false) Then
				Me.OnsurfacerightsChanging(value)
				Me.SendPropertyChanging
				Me._surfacerights = value
				Me.SendPropertyChanged("surfacerights")
				Me.OnsurfacerightsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_towndist", DbType:="Float")>  _
	Public Property towndist() As System.Nullable(Of Double)
		Get
			Return Me._towndist
		End Get
		Set
			If (Me._towndist.Equals(value) = false) Then
				Me.OntowndistChanging(value)
				Me.SendPropertyChanging
				Me._towndist = value
				Me.SendPropertyChanged("towndist")
				Me.OntowndistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_townflag", DbType:="VarChar(5)")>  _
	Public Property townflag() As String
		Get
			Return Me._townflag
		End Get
		Set
			If (String.Equals(Me._townflag, value) = false) Then
				Me.OntownflagChanging(value)
				Me.SendPropertyChanging
				Me._townflag = value
				Me.SendPropertyChanged("townflag")
				Me.OntownflagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_townname", DbType:="VarChar(50)")>  _
	Public Property townname() As String
		Get
			Return Me._townname
		End Get
		Set
			If (String.Equals(Me._townname, value) = false) Then
				Me.OntownnameChanging(value)
				Me.SendPropertyChanging
				Me._townname = value
				Me.SendPropertyChanged("townname")
				Me.OntownnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_townstateprov", DbType:="VarChar(50)")>  _
	Public Property townstateprov() As String
		Get
			Return Me._townstateprov
		End Get
		Set
			If (String.Equals(Me._townstateprov, value) = false) Then
				Me.OntownstateprovChanging(value)
				Me.SendPropertyChanging
				Me._townstateprov = value
				Me.SendPropertyChanged("townstateprov")
				Me.OntownstateprovChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userboolean1", DbType:="SmallInt")>  _
	Public Property userboolean1() As System.Nullable(Of Short)
		Get
			Return Me._userboolean1
		End Get
		Set
			If (Me._userboolean1.Equals(value) = false) Then
				Me.Onuserboolean1Changing(value)
				Me.SendPropertyChanging
				Me._userboolean1 = value
				Me.SendPropertyChanged("userboolean1")
				Me.Onuserboolean1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userboolean2", DbType:="SmallInt")>  _
	Public Property userboolean2() As System.Nullable(Of Short)
		Get
			Return Me._userboolean2
		End Get
		Set
			If (Me._userboolean2.Equals(value) = false) Then
				Me.Onuserboolean2Changing(value)
				Me.SendPropertyChanging
				Me._userboolean2 = value
				Me.SendPropertyChanged("userboolean2")
				Me.Onuserboolean2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userboolean3", DbType:="SmallInt")>  _
	Public Property userboolean3() As System.Nullable(Of Short)
		Get
			Return Me._userboolean3
		End Get
		Set
			If (Me._userboolean3.Equals(value) = false) Then
				Me.Onuserboolean3Changing(value)
				Me.SendPropertyChanging
				Me._userboolean3 = value
				Me.SendPropertyChanged("userboolean3")
				Me.Onuserboolean3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userboolean4", DbType:="SmallInt")>  _
	Public Property userboolean4() As System.Nullable(Of Short)
		Get
			Return Me._userboolean4
		End Get
		Set
			If (Me._userboolean4.Equals(value) = false) Then
				Me.Onuserboolean4Changing(value)
				Me.SendPropertyChanging
				Me._userboolean4 = value
				Me.SendPropertyChanged("userboolean4")
				Me.Onuserboolean4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userboolean5", DbType:="SmallInt")>  _
	Public Property userboolean5() As System.Nullable(Of Short)
		Get
			Return Me._userboolean5
		End Get
		Set
			If (Me._userboolean5.Equals(value) = false) Then
				Me.Onuserboolean5Changing(value)
				Me.SendPropertyChanging
				Me._userboolean5 = value
				Me.SendPropertyChanged("userboolean5")
				Me.Onuserboolean5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userdttm1", DbType:="DateTime")>  _
	Public Property userdttm1() As System.Nullable(Of Date)
		Get
			Return Me._userdttm1
		End Get
		Set
			If (Me._userdttm1.Equals(value) = false) Then
				Me.Onuserdttm1Changing(value)
				Me.SendPropertyChanging
				Me._userdttm1 = value
				Me.SendPropertyChanged("userdttm1")
				Me.Onuserdttm1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userdttm2", DbType:="DateTime")>  _
	Public Property userdttm2() As System.Nullable(Of Date)
		Get
			Return Me._userdttm2
		End Get
		Set
			If (Me._userdttm2.Equals(value) = false) Then
				Me.Onuserdttm2Changing(value)
				Me.SendPropertyChanging
				Me._userdttm2 = value
				Me.SendPropertyChanged("userdttm2")
				Me.Onuserdttm2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userdttm3", DbType:="DateTime")>  _
	Public Property userdttm3() As System.Nullable(Of Date)
		Get
			Return Me._userdttm3
		End Get
		Set
			If (Me._userdttm3.Equals(value) = false) Then
				Me.Onuserdttm3Changing(value)
				Me.SendPropertyChanging
				Me._userdttm3 = value
				Me.SendPropertyChanged("userdttm3")
				Me.Onuserdttm3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userdttm4", DbType:="DateTime")>  _
	Public Property userdttm4() As System.Nullable(Of Date)
		Get
			Return Me._userdttm4
		End Get
		Set
			If (Me._userdttm4.Equals(value) = false) Then
				Me.Onuserdttm4Changing(value)
				Me.SendPropertyChanging
				Me._userdttm4 = value
				Me.SendPropertyChanged("userdttm4")
				Me.Onuserdttm4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userdttm5", DbType:="DateTime")>  _
	Public Property userdttm5() As System.Nullable(Of Date)
		Get
			Return Me._userdttm5
		End Get
		Set
			If (Me._userdttm5.Equals(value) = false) Then
				Me.Onuserdttm5Changing(value)
				Me.SendPropertyChanging
				Me._userdttm5 = value
				Me.SendPropertyChanged("userdttm5")
				Me.Onuserdttm5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernum1", DbType:="Float")>  _
	Public Property usernum1() As System.Nullable(Of Double)
		Get
			Return Me._usernum1
		End Get
		Set
			If (Me._usernum1.Equals(value) = false) Then
				Me.Onusernum1Changing(value)
				Me.SendPropertyChanging
				Me._usernum1 = value
				Me.SendPropertyChanged("usernum1")
				Me.Onusernum1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernum2", DbType:="Float")>  _
	Public Property usernum2() As System.Nullable(Of Double)
		Get
			Return Me._usernum2
		End Get
		Set
			If (Me._usernum2.Equals(value) = false) Then
				Me.Onusernum2Changing(value)
				Me.SendPropertyChanging
				Me._usernum2 = value
				Me.SendPropertyChanged("usernum2")
				Me.Onusernum2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernum3", DbType:="Float")>  _
	Public Property usernum3() As System.Nullable(Of Double)
		Get
			Return Me._usernum3
		End Get
		Set
			If (Me._usernum3.Equals(value) = false) Then
				Me.Onusernum3Changing(value)
				Me.SendPropertyChanging
				Me._usernum3 = value
				Me.SendPropertyChanged("usernum3")
				Me.Onusernum3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernum4", DbType:="Float")>  _
	Public Property usernum4() As System.Nullable(Of Double)
		Get
			Return Me._usernum4
		End Get
		Set
			If (Me._usernum4.Equals(value) = false) Then
				Me.Onusernum4Changing(value)
				Me.SendPropertyChanging
				Me._usernum4 = value
				Me.SendPropertyChanged("usernum4")
				Me.Onusernum4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernum5", DbType:="Float")>  _
	Public Property usernum5() As System.Nullable(Of Double)
		Get
			Return Me._usernum5
		End Get
		Set
			If (Me._usernum5.Equals(value) = false) Then
				Me.Onusernum5Changing(value)
				Me.SendPropertyChanging
				Me._usernum5 = value
				Me.SendPropertyChanged("usernum5")
				Me.Onusernum5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt1", DbType:="VarChar(50)")>  _
	Public Property usertxt1() As String
		Get
			Return Me._usertxt1
		End Get
		Set
			If (String.Equals(Me._usertxt1, value) = false) Then
				Me.Onusertxt1Changing(value)
				Me.SendPropertyChanging
				Me._usertxt1 = value
				Me.SendPropertyChanged("usertxt1")
				Me.Onusertxt1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt10", DbType:="VarChar(50)")>  _
	Public Property usertxt10() As String
		Get
			Return Me._usertxt10
		End Get
		Set
			If (String.Equals(Me._usertxt10, value) = false) Then
				Me.Onusertxt10Changing(value)
				Me.SendPropertyChanging
				Me._usertxt10 = value
				Me.SendPropertyChanged("usertxt10")
				Me.Onusertxt10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt2", DbType:="VarChar(50)")>  _
	Public Property usertxt2() As String
		Get
			Return Me._usertxt2
		End Get
		Set
			If (String.Equals(Me._usertxt2, value) = false) Then
				Me.Onusertxt2Changing(value)
				Me.SendPropertyChanging
				Me._usertxt2 = value
				Me.SendPropertyChanged("usertxt2")
				Me.Onusertxt2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt3", DbType:="VarChar(50)")>  _
	Public Property usertxt3() As String
		Get
			Return Me._usertxt3
		End Get
		Set
			If (String.Equals(Me._usertxt3, value) = false) Then
				Me.Onusertxt3Changing(value)
				Me.SendPropertyChanging
				Me._usertxt3 = value
				Me.SendPropertyChanged("usertxt3")
				Me.Onusertxt3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt4", DbType:="VarChar(50)")>  _
	Public Property usertxt4() As String
		Get
			Return Me._usertxt4
		End Get
		Set
			If (String.Equals(Me._usertxt4, value) = false) Then
				Me.Onusertxt4Changing(value)
				Me.SendPropertyChanging
				Me._usertxt4 = value
				Me.SendPropertyChanged("usertxt4")
				Me.Onusertxt4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt5", DbType:="VarChar(50)")>  _
	Public Property usertxt5() As String
		Get
			Return Me._usertxt5
		End Get
		Set
			If (String.Equals(Me._usertxt5, value) = false) Then
				Me.Onusertxt5Changing(value)
				Me.SendPropertyChanging
				Me._usertxt5 = value
				Me.SendPropertyChanged("usertxt5")
				Me.Onusertxt5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt6", DbType:="VarChar(50)")>  _
	Public Property usertxt6() As String
		Get
			Return Me._usertxt6
		End Get
		Set
			If (String.Equals(Me._usertxt6, value) = false) Then
				Me.Onusertxt6Changing(value)
				Me.SendPropertyChanging
				Me._usertxt6 = value
				Me.SendPropertyChanged("usertxt6")
				Me.Onusertxt6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt7", DbType:="VarChar(50)")>  _
	Public Property usertxt7() As String
		Get
			Return Me._usertxt7
		End Get
		Set
			If (String.Equals(Me._usertxt7, value) = false) Then
				Me.Onusertxt7Changing(value)
				Me.SendPropertyChanging
				Me._usertxt7 = value
				Me.SendPropertyChanged("usertxt7")
				Me.Onusertxt7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt8", DbType:="VarChar(50)")>  _
	Public Property usertxt8() As String
		Get
			Return Me._usertxt8
		End Get
		Set
			If (String.Equals(Me._usertxt8, value) = false) Then
				Me.Onusertxt8Changing(value)
				Me.SendPropertyChanging
				Me._usertxt8 = value
				Me.SendPropertyChanged("usertxt8")
				Me.Onusertxt8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usertxt9", DbType:="VarChar(50)")>  _
	Public Property usertxt9() As String
		Get
			Return Me._usertxt9
		End Get
		Set
			If (String.Equals(Me._usertxt9, value) = false) Then
				Me.Onusertxt9Changing(value)
				Me.SendPropertyChanging
				Me._usertxt9 = value
				Me.SendPropertyChanged("usertxt9")
				Me.Onusertxt9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_utmgridzone", DbType:="Int")>  _
	Public Property utmgridzone() As System.Nullable(Of Integer)
		Get
			Return Me._utmgridzone
		End Get
		Set
			If (Me._utmgridzone.Equals(value) = false) Then
				Me.OnutmgridzoneChanging(value)
				Me.SendPropertyChanging
				Me._utmgridzone = value
				Me.SendPropertyChanged("utmgridzone")
				Me.OnutmgridzoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_utmsource", DbType:="VarChar(50)")>  _
	Public Property utmsource() As String
		Get
			Return Me._utmsource
		End Get
		Set
			If (String.Equals(Me._utmsource, value) = false) Then
				Me.OnutmsourceChanging(value)
				Me.SendPropertyChanging
				Me._utmsource = value
				Me.SendPropertyChanged("utmsource")
				Me.OnutmsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_utmx", DbType:="Float")>  _
	Public Property utmx() As System.Nullable(Of Double)
		Get
			Return Me._utmx
		End Get
		Set
			If (Me._utmx.Equals(value) = false) Then
				Me.OnutmxChanging(value)
				Me.SendPropertyChanging
				Me._utmx = value
				Me.SendPropertyChanged("utmx")
				Me.OnutmxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_utmy", DbType:="Float")>  _
	Public Property utmy() As System.Nullable(Of Double)
		Get
			Return Me._utmy
		End Get
		Set
			If (Me._utmy.Equals(value) = false) Then
				Me.OnutmyChanging(value)
				Me.SendPropertyChanging
				Me._utmy = value
				Me.SendPropertyChanged("utmy")
				Me.OnutmyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_waterdepth", DbType:="Float")>  _
	Public Property waterdepth() As System.Nullable(Of Double)
		Get
			Return Me._waterdepth
		End Get
		Set
			If (Me._waterdepth.Equals(value) = false) Then
				Me.OnwaterdepthChanging(value)
				Me.SendPropertyChanging
				Me._waterdepth = value
				Me.SendPropertyChanged("waterdepth")
				Me.OnwaterdepthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wellclass", DbType:="VarChar(50)")>  _
	Public Property wellclass() As String
		Get
			Return Me._wellclass
		End Get
		Set
			If (String.Equals(Me._wellclass, value) = false) Then
				Me.OnwellclassChanging(value)
				Me.SendPropertyChanging
				Me._wellclass = value
				Me.SendPropertyChanged("wellclass")
				Me.OnwellclassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wellconfig", DbType:="VarChar(50)")>  _
	Public Property wellconfig() As String
		Get
			Return Me._wellconfig
		End Get
		Set
			If (String.Equals(Me._wellconfig, value) = false) Then
				Me.OnwellconfigChanging(value)
				Me.SendPropertyChanging
				Me._wellconfig = value
				Me.SendPropertyChanged("wellconfig")
				Me.OnwellconfigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wellida", DbType:="VarChar(50)")>  _
	Public Property wellida() As String
		Get
			Return Me._wellida
		End Get
		Set
			If (String.Equals(Me._wellida, value) = false) Then
				Me.OnwellidaChanging(value)
				Me.SendPropertyChanging
				Me._wellida = value
				Me.SendPropertyChanged("wellida")
				Me.OnwellidaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wellidb", DbType:="VarChar(50)")>  _
	Public Property wellidb() As String
		Get
			Return Me._wellidb
		End Get
		Set
			If (String.Equals(Me._wellidb, value) = false) Then
				Me.OnwellidbChanging(value)
				Me.SendPropertyChanging
				Me._wellidb = value
				Me.SendPropertyChanged("wellidb")
				Me.OnwellidbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wellidc", DbType:="VarChar(50)")>  _
	Public Property wellidc() As String
		Get
			Return Me._wellidc
		End Get
		Set
			If (String.Equals(Me._wellidc, value) = false) Then
				Me.OnwellidcChanging(value)
				Me.SendPropertyChanging
				Me._wellidc = value
				Me.SendPropertyChanged("wellidc")
				Me.OnwellidcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wellidd", DbType:="VarChar(50)")>  _
	Public Property wellidd() As String
		Get
			Return Me._wellidd
		End Get
		Set
			If (String.Equals(Me._wellidd, value) = false) Then
				Me.OnwelliddChanging(value)
				Me.SendPropertyChanging
				Me._wellidd = value
				Me.SendPropertyChanged("wellidd")
				Me.OnwelliddChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wellide", DbType:="VarChar(50)")>  _
	Public Property wellide() As String
		Get
			Return Me._wellide
		End Get
		Set
			If (String.Equals(Me._wellide, value) = false) Then
				Me.OnwellideChanging(value)
				Me.SendPropertyChanging
				Me._wellide = value
				Me.SendPropertyChanged("wellide")
				Me.OnwellideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_welllicensee", DbType:="VarChar(50)")>  _
	Public Property welllicensee() As String
		Get
			Return Me._welllicensee
		End Get
		Set
			If (String.Equals(Me._welllicensee, value) = false) Then
				Me.OnwelllicenseeChanging(value)
				Me.SendPropertyChanging
				Me._welllicensee = value
				Me.SendPropertyChanged("welllicensee")
				Me.OnwelllicenseeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_welllicenseno", DbType:="VarChar(50)")>  _
	Public Property welllicenseno() As String
		Get
			Return Me._welllicenseno
		End Get
		Set
			If (String.Equals(Me._welllicenseno, value) = false) Then
				Me.OnwelllicensenoChanging(value)
				Me.SendPropertyChanging
				Me._welllicenseno = value
				Me.SendPropertyChanged("welllicenseno")
				Me.OnwelllicensenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wellname", DbType:="VarChar(100)")>  _
	Public Property wellname() As String
		Get
			Return Me._wellname
		End Get
		Set
			If (String.Equals(Me._wellname, value) = false) Then
				Me.OnwellnameChanging(value)
				Me.SendPropertyChanging
				Me._wellname = value
				Me.SendPropertyChanged("wellname")
				Me.OnwellnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_welltyp1", DbType:="VarChar(50)")>  _
	Public Property welltyp1() As String
		Get
			Return Me._welltyp1
		End Get
		Set
			If (String.Equals(Me._welltyp1, value) = false) Then
				Me.Onwelltyp1Changing(value)
				Me.SendPropertyChanging
				Me._welltyp1 = value
				Me.SendPropertyChanged("welltyp1")
				Me.Onwelltyp1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_welltyp2", DbType:="VarChar(50)")>  _
	Public Property welltyp2() As String
		Get
			Return Me._welltyp2
		End Get
		Set
			If (String.Equals(Me._welltyp2, value) = false) Then
				Me.Onwelltyp2Changing(value)
				Me.SendPropertyChanging
				Me._welltyp2 = value
				Me.SendPropertyChanged("welltyp2")
				Me.Onwelltyp2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_workingint", DbType:="Float")>  _
	Public Property workingint() As System.Nullable(Of Double)
		Get
			Return Me._workingint
		End Get
		Set
			If (Me._workingint.Equals(value) = false) Then
				Me.OnworkingintChanging(value)
				Me.SendPropertyChanging
				Me._workingint = value
				Me.SendPropertyChanged("workingint")
				Me.OnworkingintChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslockmeui", DbType:="SmallInt")>  _
	Public Property syslockmeui() As System.Nullable(Of Short)
		Get
			Return Me._syslockmeui
		End Get
		Set
			If (Me._syslockmeui.Equals(value) = false) Then
				Me.OnsyslockmeuiChanging(value)
				Me.SendPropertyChanging
				Me._syslockmeui = value
				Me.SendPropertyChanged("syslockmeui")
				Me.OnsyslockmeuiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslockchildrenui", DbType:="SmallInt")>  _
	Public Property syslockchildrenui() As System.Nullable(Of Short)
		Get
			Return Me._syslockchildrenui
		End Get
		Set
			If (Me._syslockchildrenui.Equals(value) = false) Then
				Me.OnsyslockchildrenuiChanging(value)
				Me.SendPropertyChanging
				Me._syslockchildrenui = value
				Me.SendPropertyChanged("syslockchildrenui")
				Me.OnsyslockchildrenuiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslockme", DbType:="SmallInt")>  _
	Public Property syslockme() As System.Nullable(Of Short)
		Get
			Return Me._syslockme
		End Get
		Set
			If (Me._syslockme.Equals(value) = false) Then
				Me.OnsyslockmeChanging(value)
				Me.SendPropertyChanging
				Me._syslockme = value
				Me.SendPropertyChanged("syslockme")
				Me.OnsyslockmeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslockchildren", DbType:="SmallInt")>  _
	Public Property syslockchildren() As System.Nullable(Of Short)
		Get
			Return Me._syslockchildren
		End Get
		Set
			If (Me._syslockchildren.Equals(value) = false) Then
				Me.OnsyslockchildrenChanging(value)
				Me.SendPropertyChanging
				Me._syslockchildren = value
				Me.SendPropertyChanged("syslockchildren")
				Me.OnsyslockchildrenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslockdate", DbType:="DateTime")>  _
	Public Property syslockdate() As System.Nullable(Of Date)
		Get
			Return Me._syslockdate
		End Get
		Set
			If (Me._syslockdate.Equals(value) = false) Then
				Me.OnsyslockdateChanging(value)
				Me.SendPropertyChanging
				Me._syslockdate = value
				Me.SendPropertyChanged("syslockdate")
				Me.OnsyslockdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sysmoddate", DbType:="DateTime")>  _
	Public Property sysmoddate() As System.Nullable(Of Date)
		Get
			Return Me._sysmoddate
		End Get
		Set
			If (Me._sysmoddate.Equals(value) = false) Then
				Me.OnsysmoddateChanging(value)
				Me.SendPropertyChanging
				Me._sysmoddate = value
				Me.SendPropertyChanged("sysmoddate")
				Me.OnsysmoddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sysmoduser", DbType:="VarChar(50)")>  _
	Public Property sysmoduser() As String
		Get
			Return Me._sysmoduser
		End Get
		Set
			If (String.Equals(Me._sysmoduser, value) = false) Then
				Me.OnsysmoduserChanging(value)
				Me.SendPropertyChanging
				Me._sysmoduser = value
				Me.SendPropertyChanged("sysmoduser")
				Me.OnsysmoduserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syscreatedate", DbType:="DateTime")>  _
	Public Property syscreatedate() As System.Nullable(Of Date)
		Get
			Return Me._syscreatedate
		End Get
		Set
			If (Me._syscreatedate.Equals(value) = false) Then
				Me.OnsyscreatedateChanging(value)
				Me.SendPropertyChanging
				Me._syscreatedate = value
				Me.SendPropertyChanged("syscreatedate")
				Me.OnsyscreatedateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syscreateuser", DbType:="VarChar(50)")>  _
	Public Property syscreateuser() As String
		Get
			Return Me._syscreateuser
		End Get
		Set
			If (String.Equals(Me._syscreateuser, value) = false) Then
				Me.OnsyscreateuserChanging(value)
				Me.SendPropertyChanging
				Me._syscreateuser = value
				Me.SendPropertyChanged("syscreateuser")
				Me.OnsyscreateuserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_systag", DbType:="VarChar(255)")>  _
	Public Property systag() As String
		Get
			Return Me._systag
		End Get
		Set
			If (String.Equals(Me._systag, value) = false) Then
				Me.OnsystagChanging(value)
				Me.SendPropertyChanging
				Me._systag = value
				Me.SendPropertyChanged("systag")
				Me.OnsystagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sysmoddatedb", DbType:="DateTime")>  _
	Public Property sysmoddatedb() As System.Nullable(Of Date)
		Get
			Return Me._sysmoddatedb
		End Get
		Set
			If (Me._sysmoddatedb.Equals(value) = false) Then
				Me.OnsysmoddatedbChanging(value)
				Me.SendPropertyChanging
				Me._sysmoddatedb = value
				Me.SendPropertyChanged("sysmoddatedb")
				Me.OnsysmoddatedbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sysmoduserdb", DbType:="VarChar(50)")>  _
	Public Property sysmoduserdb() As String
		Get
			Return Me._sysmoduserdb
		End Get
		Set
			If (String.Equals(Me._sysmoduserdb, value) = false) Then
				Me.OnsysmoduserdbChanging(value)
				Me.SendPropertyChanging
				Me._sysmoduserdb = value
				Me.SendPropertyChanged("sysmoduserdb")
				Me.OnsysmoduserdbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syssecuritytyp", DbType:="VarChar(50)")>  _
	Public Property syssecuritytyp() As String
		Get
			Return Me._syssecuritytyp
		End Get
		Set
			If (String.Equals(Me._syssecuritytyp, value) = false) Then
				Me.OnsyssecuritytypChanging(value)
				Me.SendPropertyChanging
				Me._syssecuritytyp = value
				Me.SendPropertyChanged("syssecuritytyp")
				Me.OnsyssecuritytypChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslockdatemaster", DbType:="DateTime")>  _
	Public Property syslockdatemaster() As System.Nullable(Of Date)
		Get
			Return Me._syslockdatemaster
		End Get
		Set
			If (Me._syslockdatemaster.Equals(value) = false) Then
				Me.OnsyslockdatemasterChanging(value)
				Me.SendPropertyChanging
				Me._syslockdatemaster = value
				Me.SendPropertyChanged("syslockdatemaster")
				Me.OnsyslockdatemasterChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
